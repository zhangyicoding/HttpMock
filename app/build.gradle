apply plugin: 'com.android.application'

// kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// HttpMock
// 导入该插件可以在release版本中删除assets路径下的json文件，墙裂建议保留
apply from: '../lib_httpmock_no_op/httpmock.gradle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.estyle.httpmockdemo"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        debug {
            storeFile file('Sign.jks')
            storePassword '123456'
            keyAlias = 'sign'
            keyPassword '123456'
        }
        release {
            storeFile file('Sign.jks')
            storePassword '123456'
            keyAlias = 'sign'
            keyPassword '123456'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Retrofit
    def retrofit_version = '2.5.0'
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit_version}"

    // RxAndroid
    def rx_android_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:${rx_android_version}"

    // Chuck
    def chuck_version = '1.1.0'
    debugImplementation "com.readystatesoftware.chuck:library:${chuck_version}"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:${chuck_version}"

    // HttpMock
    debugImplementation project(path: ':lib_httpmock')
    releaseImplementation project(path: ':lib_httpmock_no_op')
    kaptDebug project(path: ':lib_httpmock_processor')// java使用debugAnnotationProcessor
}
